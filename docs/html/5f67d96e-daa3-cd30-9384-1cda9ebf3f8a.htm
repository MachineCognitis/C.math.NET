<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>math.logb Method (Double)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:C.math.logb(System.Double)" /><meta name="Description" content="Gets the unbiased exponent of the specified floating-point ." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="C" /><meta name="file" content="5f67d96e-daa3-cd30-9384-1cda9ebf3f8a" /><meta name="guid" content="5f67d96e-daa3-cd30-9384-1cda9ebf3f8a" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Documented Class Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="846f5c8a-6cba-433e-9f18-cde2ff5695cd.htm" title="Documented Class Library" tocid="roottoc">Documented Class Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="838f02c3-5e77-3f27-8b75-7c758fa06f50.htm" title="C" tocid="838f02c3-5e77-3f27-8b75-7c758fa06f50">C</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="fd141e6a-09c1-1583-b929-f1db04405075.htm" title="math Class" tocid="fd141e6a-09c1-1583-b929-f1db04405075">math Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="ea400086-1312-a627-8c0e-42c5a0013d44.htm" title="math Methods" tocid="ea400086-1312-a627-8c0e-42c5a0013d44">math Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="4b542f14-7294-c8b9-a5f6-2999a08122bb.htm" title="logb Method " tocid="4b542f14-7294-c8b9-a5f6-2999a08122bb">logb Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="5f67d96e-daa3-cd30-9384-1cda9ebf3f8a.htm" title="logb Method (Double)" tocid="5f67d96e-daa3-cd30-9384-1cda9ebf3f8a">logb Method (Double)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="8d35ed64-d370-3807-b71e-da6a2750eeda.htm" title="logb Method (Single)" tocid="8d35ed64-d370-3807-b71e-da6a2750eeda">logb Method (Single)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">math<span id="LSTA49851E9_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA49851E9_0?cpp=::|nu=.");</script>logb Method (Double)</td></tr></table><span class="introStyle"></span> <div class="summary">
            Gets the unbiased exponent of the specified floating-point <span class="parameter">number</span>.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="838f02c3-5e77-3f27-8b75-7c758fa06f50.htm">C</a><br />
    <strong>Assembly:</strong>
   C.math (in C.math.dll) Version: 1.0.0.0 (1.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">double</span> <span class="identifier">logb</span>(
	<span class="identifier">double</span> <span class="parameter">number</span>
)</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">logb</span> ( 
	<span class="parameter">number</span> <span class="keyword">As</span> <span class="identifier">Double</span>
) <span class="keyword">As</span> <span class="identifier">Double</span></pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="identifier">double</span> <span class="identifier">logb</span>(
	<span class="identifier">double</span> <span class="parameter">number</span>
)</pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">logb</span> : 
        <span class="parameter">number</span> : <span class="identifier">float</span> <span class="keyword">-&gt;</span> <span class="identifier">float</span> 
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">number</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">System<span id="LSTA49851E9_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA49851E9_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><br />A floating-point number.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">Double</a><br />The unbiased exponent of the specified floating-point <span class="parameter">number</span>, or a special value if <span class="parameter">number</span> is not normal or subnormal.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
            The unbiased exponent is the integral part of the logarithm base 2 of <span class="parameter">number</span>.
            The unbiased exponent is such that
            </p><p><span class="code"><span class="parameter">number</span> = <a href="6f7ec894-e728-1cbf-f630-4cd00e34f80e.htm">significand</a>(<span class="parameter">number</span>) * 2^<span class="selflink">logb</span>(<span class="parameter">number</span>)</span>.
            </p><p>
            The return unbiased exponent is valid for all normal and subnormal numbers. Special values are treated as follows.
            </p><ul><li>If <span class="parameter">number</span> is <span class="code">±0</span>, <a href="http://msdn2.microsoft.com/en-us/library/3x7fs67h" target="_blank">NegativeInfinity</a> is returned.</li><li>If <span class="parameter">number</span> is infinite, <a href="http://msdn2.microsoft.com/en-us/library/7c4k7y8t" target="_blank">PositiveInfinity</a> is returned.</li><li>If <span class="parameter">number</span> is NaN, <a href="http://msdn2.microsoft.com/en-us/library/c8481tka" target="_blank">NaN</a> is returned.</li></ul><p>
            If <span class="parameter">number</span> is not zero, infinite, or NaN, the value returned is exactly equivalent to
            <span class="code"><a href="6c69efac-8d3c-7c31-f0c5-930b73593c0e.htm">ilogb</a>(<span class="parameter">number</span>)</span>. 
            </p><p>
            The value of the exponent returned by <span class="selflink">logb(Double)</span> is always <span class="code">1</span> less than the exponent retuned by
            <a href="b4d6cd51-2441-999a-18c2-8d18dc2a2c3c.htm">frexp(Double, Int32<span id="LSTA49851E9_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA49851E9_2?cpp=%");</script>)</a> because of the different normalization requirements:
            for <span class="selflink">logb(Double)</span>, the normalized significand is in the interval <span class="code">[1, 2)</span>,
            but for <a href="b4d6cd51-2441-999a-18c2-8d18dc2a2c3c.htm">frexp(Double, Int32<span id="LSTA49851E9_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA49851E9_3?cpp=%");</script>)</a>, the normalized significand is in the interval <span class="code">[0.5, 1)</span>. 
            </p><p>
            See <a href="http://en.cppreference.com/w/c/numeric/math/logb">logb</a> in the C standard documentation.
            </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID3RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDAABA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDAABA','cs','1','4');return false;">C#</a></div><div id="ID0EDAABA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDAABA','vb','2','4');return false;">VB</a></div><div id="ID0EDAABA_tab3" class="codeSnippetContainerTabPhantom"><a href="#" onclick="javascript:ChangeTab('ID0EDAABA','cpp','3','4');return false;">C++</a></div><div id="ID0EDAABA_tab4" class="codeSnippetContainerTabPhantom"><a href="#" onclick="javascript:ChangeTab('ID0EDAABA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Assert.IsTrue(math.logb(<span class="highlight-number">1</span>D) == <span class="highlight-number">0</span>D);
Assert.IsTrue(math.logb(System.Math.E) == <span class="highlight-number">1</span>D);
Assert.IsTrue(math.logb(<span class="highlight-number">1024</span>D) == <span class="highlight-number">10</span>D);
Assert.IsTrue(math.logb(<span class="highlight-number">-2000</span>D) == <span class="highlight-number">10</span>D);

Assert.IsTrue(math.logb(<span class="highlight-number">2</span>D) == <span class="highlight-number">1</span>D);
Assert.IsTrue(math.logb(Math.Pow(<span class="highlight-number">2</span>D, <span class="highlight-number">56</span>D)) == <span class="highlight-number">56</span>D);
Assert.IsTrue(math.logb(<span class="highlight-number">1.1</span>D * Math.Pow(<span class="highlight-number">2</span>D, <span class="highlight-number">-1074</span>D)) == <span class="highlight-number">-1074</span>D);
Assert.IsTrue(math.logb(Math.Pow(<span class="highlight-number">2</span>D, <span class="highlight-number">-1075</span>D)) == System.Double.NegativeInfinity);
Assert.IsTrue(math.logb(Math.Pow(<span class="highlight-number">2</span>D, <span class="highlight-number">1024</span>D)) == System.Double.PositiveInfinity);
Assert.IsTrue(math.logb(Math.Pow(<span class="highlight-number">2</span>D, <span class="highlight-number">1023</span>D)) == <span class="highlight-number">1023</span>D);
Assert.IsTrue(math.logb(<span class="highlight-number">2</span>D * Math.Pow(<span class="highlight-number">2</span>D, <span class="highlight-number">102</span>D)) == <span class="highlight-number">103</span>D);

Assert.IsTrue(math.logb(math.DBL_DENORM_MIN) == math.DBL_EXP_MIN - math.DBL_MANT_BITS);
Assert.IsTrue(math.logb(math.DBL_DENORM_MAX) == math.DBL_EXP_MIN - <span class="highlight-number">1</span>);
Assert.IsTrue(math.logb(math.DBL_MIN) == math.DBL_EXP_MIN);
Assert.IsTrue(math.logb(math.DBL_MAX) == math.DBL_EXP_MAX);

Assert.IsTrue(math.logb(System.Double.PositiveInfinity) == System.Double.PositiveInfinity);
Assert.IsTrue(math.logb(System.Double.NegativeInfinity) == System.Double.PositiveInfinity);
Assert.IsTrue(math.logb(<span class="highlight-number">0</span>D) == System.Double.NegativeInfinity);
Assert.IsTrue(math.logb(<span class="highlight-number">-0</span>D) == System.Double.NegativeInfinity);
Assert.IsTrue(System.Double.IsNaN(math.logb(System.Double.NaN)));
Assert.IsTrue(System.Double.IsNaN(math.logb(-System.Double.NaN)));</pre></div><div id="ID0EDAABA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">Assert.IsTrue(math.logb(<span class="highlight-number">1</span>D) = <span class="highlight-number">0</span>D);
Assert.IsTrue(math.logb(System.Math.E) = <span class="highlight-number">1</span>D);
Assert.IsTrue(math.logb(<span class="highlight-number">1024</span>D) = <span class="highlight-number">10</span>D);
Assert.IsTrue(math.logb(<span class="highlight-number">-2000</span>D) = <span class="highlight-number">10</span>D);

Assert.IsTrue(math.logb(<span class="highlight-number">2</span>D) = <span class="highlight-number">1</span>D);
Assert.IsTrue(math.logb(Math.Pow(<span class="highlight-number">2</span>D, <span class="highlight-number">56</span>D)) = <span class="highlight-number">56</span>D);
Assert.IsTrue(math.logb(<span class="highlight-number">1.1</span>D * Math.Pow(<span class="highlight-number">2</span>D, <span class="highlight-number">-1074</span>D)) = <span class="highlight-number">-1074</span>D);
Assert.IsTrue(math.logb(Math.Pow(<span class="highlight-number">2</span>D, <span class="highlight-number">-1075</span>D)) = System.<span class="highlight-keyword">Double</span>.NegativeInfinity);
Assert.IsTrue(math.logb(Math.Pow(<span class="highlight-number">2</span>D, <span class="highlight-number">1024</span>D)) = System.<span class="highlight-keyword">Double</span>.PositiveInfinity);
Assert.IsTrue(math.logb(Math.Pow(<span class="highlight-number">2</span>D, <span class="highlight-number">1023</span>D)) = <span class="highlight-number">1023</span>D);
Assert.IsTrue(math.logb(<span class="highlight-number">2</span>D * Math.Pow(<span class="highlight-number">2</span>D, <span class="highlight-number">102</span>D)) = <span class="highlight-number">103</span>D);

Assert.IsTrue(math.logb(math.DBL_DENORM_MIN) = math.DBL_EXP_MIN - math.DBL_MANT_BITS);
Assert.IsTrue(math.logb(math.DBL_DENORM_MAX) = math.DBL_EXP_MIN - <span class="highlight-number">1</span>);
Assert.IsTrue(math.logb(math.DBL_MIN) = math.DBL_EXP_MIN);
Assert.IsTrue(math.logb(math.DBL_MAX) = math.DBL_EXP_MAX);

Assert.IsTrue(math.logb(System.<span class="highlight-keyword">Double</span>.PositiveInfinity) = System.<span class="highlight-keyword">Double</span>.PositiveInfinity);
Assert.IsTrue(math.logb(System.<span class="highlight-keyword">Double</span>.NegativeInfinity) = System.<span class="highlight-keyword">Double</span>.PositiveInfinity);
Assert.IsTrue(math.logb(<span class="highlight-number">0</span>D) = System.<span class="highlight-keyword">Double</span>.NegativeInfinity);
Assert.IsTrue(math.logb(<span class="highlight-number">-0</span>D) = System.<span class="highlight-keyword">Double</span>.NegativeInfinity);
Assert.IsTrue(System.<span class="highlight-keyword">Double</span>.IsNaN(math.logb(System.<span class="highlight-keyword">Double</span>.NaN)));
Assert.IsTrue(System.<span class="highlight-keyword">Double</span>.IsNaN(math.logb(-System.<span class="highlight-keyword">Double</span>.NaN)));</pre></div><div id="ID0EDAABA_code_Div3" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="ID0EDAABA_code_Div4" class="codeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="fd141e6a-09c1-1583-b929-f1db04405075.htm">math Class</a></div><div class="seeAlsoStyle"><a href="4b542f14-7294-c8b9-a5f6-2999a08122bb.htm">logb Overload</a></div><div class="seeAlsoStyle"><a href="838f02c3-5e77-3f27-8b75-7c758fa06f50.htm">C Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>